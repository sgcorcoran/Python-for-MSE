Traceback (most recent call last):
  File "C:\Users\Sean\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\Sean\anaconda3\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Sean\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
pos=pos[0:-3] # if last three points were calibration values
# apply offset matrix to all pixel points
offset_pos=pos-offset_cal.flatten()

# now dot m_cal matrix with each offset pixel value
data=np.array([np.dot(m_cal,i) for i in offset_pos]) #using comprehension rather than for loop
display(data)
#***************data is now calibrated********
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Input [1;32mIn [5][0m, in [0;36m<cell line: 3>[1;34m()[0m
[0;32m      1[0m pos[38;5;241m=[39mpos[[38;5;241m0[39m:[38;5;241m-[39m[38;5;241m3[39m] [38;5;66;03m# if last three points were calibration values[39;00m
[0;32m      2[0m [38;5;66;03m# apply offset matrix to all pixel points[39;00m
[1;32m----> 3[0m offset_pos[38;5;241m=[39m[43mpos[49m[38;5;241;43m-[39;49m[43moffset_cal[49m[38;5;241;43m.[39;49m[43mflatten[49m[43m([49m[43m)[49m
[0;32m      5[0m [38;5;66;03m# now dot m_cal matrix with each offset pixel value[39;00m
[0;32m      6[0m data[38;5;241m=[39mnp[38;5;241m.[39marray([np[38;5;241m.[39mdot(m_cal,i) [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m offset_pos]) [38;5;66;03m#using comprehension rather than for loop[39;00m

[1;31mValueError[0m: operands could not be broadcast together with shapes (0,) (2,) 
ValueError: operands could not be broadcast together with shapes (0,) (2,) 

